#!/bin/bash

# Source scripts from a *.pkg directory matching the basename in $script_name
# or the first parameter. If parameters are specified after the first, then
# only scripts matching those globs will be loaded from the *.pkg directory.
#
# Parameters:
#   [package_basename] [filename_glob ...]
# Return Codes:
#   0   Loaded scripts from package without error.
#   1   Error loading script from package or no script name set.
load_package () {
    local root file dep dir='scripts' pkg=$1
    [[ -z $1 ]] && pkg=$script_name
    if [[ -z $pkg ]]; then
        log -c "No package name set when called by function '${FUNCNAME[1]}'."
        return 1
    elif [[ $pkg =~ '/' ]]; then
        dir=${1%/*} pkg=${pkg##*/}
    fi
    pkg+='.pkg'
    shift
    [[ -z $1 ]] && set -- '*'
    for root in "servers/$server" 'global'; do
        log -c "Scanning '$root/$dir' for: $pkg"
        for dep in "$@"; do
            log -c "Scanning '$pkg' for: $dep"
            unset dep_loaded
            while read -r file; do
                local fname=${file##*/}
                if [[ $fname =~ /[[:alnum:]~_.-]+$/ ]]; then
                    log -c "Invalid filename: $pkg/$fname"
                    return 1
                fi
                log -c "Sourcing: $pkg/$fname"
                if ! . "$file"; then
                    log -c "Error sourcing: $pkg/$fname"
                    return 1
                fi
                local dep_loaded=0
            done < <(paths_of "$root/$dir/$pkg" "$dep" "[0-9]*-$dep")
            if [[ -z $dep_loaded ]]; then
                log -c "Not found: $pkg/$dep"
                break
            fi
        done
    done
    [[ -z $dep_loaded ]] && log -c "Error loading package: $pkg"
    return ${dep_loaded:-1}
}
