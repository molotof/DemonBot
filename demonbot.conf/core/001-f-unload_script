#!/bin/bash

# Unload a script that was sourced by `source_all` or `load_script`.
#
# Parameters:
#   script_name
unload_script () {
    local script_name=${1#[[:digit:]]*-} func dep
    if [[ ${loaded_scripts["$script_name"]} ]]; then
        log "Unloading: $1"
        is_exec -e "_unload_$script_name"
        if [[ ${loaded_scripts["$script_name:funcs"]} ]]; then
            for func in ${loaded_scripts["$script_name:funcs"]}; do
                ftype=${func:0:1}
                func=${func:2}
                case "$ftype" in
                    c)
                        del_connector "$func"
                        ;;
                    h)
                        local IFS='/'
                        func=($func)
                        local IFS=$oifs
                        del_handler ${func[@]}
                        ;;
                    x)
                        del_command "$func"
                        ;;
                esac
            done
            unset loaded_scripts["$script_name:funcs"]
        fi
        unset loaded_scripts["$script_name"]
    fi
    if [[ ${loaded_scripts["$script_name:depof"]} ]]; then
        for dep in ${loaded_scripts["$script_name:depof"]}; do
            [[ -z ${loaded_scripts["$dep"]} ]] && continue
            log -c "$dep depended on $script_name."
            $FUNCNAME "$dep"
        done
        unset loaded_scripts["$script_name:depof"]
    fi
    if [[ ${loaded_scripts["$script_name:deps"]} ]]; then
        for dep in ${loaded_scripts["$script_name:deps"]}; do
            [[ -z ${loaded_scripts["$dep"]} ]] && continue
            $FUNCNAME "$dep"
        done
        unset loaded_scripts["$script_name:deps"]
    fi
    return 0
}

