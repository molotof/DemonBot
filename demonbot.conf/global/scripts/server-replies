#!/bin/bash
h_ping () {
    send pong $host $2
}
add_handler ping h_ping

h_nick () {
    log -c "$nick nick was changed to $2."
    nick=$2
}
add_handler 'nick' h_nick

h_err_nicknameinuse () {
    [[ $logged_in ]] &&
        return
    if $next_nick; then
        event cmd nick
    else
        event cmd quit
    fi
}
add_handler '433' h_err_nicknameinuse

h_rpl_myinfo () {
    host=$2
    host_name=$4
    host_ircd=$5
    modes_user=$5
    modes_chan=$6
    logged_in=1
    ircd_features=()
    join_auto
}
add_handler '004' h_rpl_myinfo

h_rpl_isupport () {
    local IFS='=' feature params index p
    shift 3
    for feature in "$@"; do
        [[ $feature =~ 'supported' ]] &&
            break
        IFS='='
        feature=($feature)
        feature[0]=${feature,,}
        case "$feature" in
            prefix)
                IFS=')'
                params=(${feature[1]/'('/})
                echo "${params[@]}"
                ircd_features["$feature.0"]=$params
                ircd_features["$feature.1"]=${params[1]}
                ;;
            *)
                if [[ ${feature[1]} ]]; then
                    index=0
                    IFS=','
                    params=(${feature[1]})
                    IFS=':'
                    for p in "${params[@]}"; do
                        if [[ $p =~ ':' ]]; then
                            p=($p)
                            ircd_features["$feature.${p[0]}"]=${p[1]}
                        elif (( ${#params[@]} > 1 )); then
                            ircd_features["$feature.$index"]=$p
                        else
                            ircd_features["$feature"]=$p
                        fi
                        (( index++ ))
                    done
                else
                    ircd_features["$feature"]=1
                fi
                ;;
        esac
    done
}
add_handler '005' h_rpl_isupport

